UDP Broadcast message on 7890 to show card is alive. Has NCP_BOOT_SEQUENCE and S/N.
	Format: 0x4040 BOOT_SEQ=0x********(uint32) S/N=13 bytes(ASCII) Empty=43-0x00 0x0403

Open port to TCP 1027 and receive info about card.
Received metadata:
	Null terminated strings. One string per packet for mine but have seen the entire list in one packet before too...?
Tranmit two packets, one with with NCP_BOOT_SEQUENCE retransmitted.
	First: Addr=0x80 BOOT_SEQ=4 bytes(uint32)
		Returns 0x00
	Second: Addr=0x01 Card-ID=0x00000065(uint32) aka 101 ID
		Returns 0x00
Close TCP 1027.

TFTP over files:
	_pciepa.vxw
	_fpgaconfig
	_pciepa
	helena1.exo
	helena2.exo
	aevt.mcs

Open TCP 1027, receive again, push two packets, one with scroll message, the other with known msg "Z_pciepa".
	First: Addr=0x20 Msg=Scroll msg ASCII ends with a null term 0x00.
		Max length undetermined.
		No immediate return/ack.
	Second: Addr=0x00 Data=0x00 "Z_pciepa" 0x00(10 ASCII bytes)
		No immediate return/ack.
	Card then sends a series of 16 single bytes (each of these are their own packet):
		0x00 0x01 0x04 0x05 0x00 0x01 0x04 0x00 0xff 0xff 0x00 0x00 0xff 0xff 0x00 0x00
		This seems the same each time across different cards...

Open TCP 1029:
	Note: xx is verified contents for value, ?? is unverified.
	MSGs sent to/from card with first 12 bytes in packet Addr=0x800000xx RSPCode=0x80 Token=0x??xxxx Unk1=0x000000?? Everything after Data?
	MSGs should always(?) have a response message come back with the same token but may have a different address.
	MSGs should always(?) be transmitted with the RSPCode=0x80 and the return message with the same token will have 0x80 as-well
		Can MSGs to certain addresses generate other RSPCode=0x00 msgs with a blank token along with the final RSPCode???
	MSGs from card as a broadcast about general info come with blank RSPCode and Token (0x00 0x000000).
	General empty return ACK to sent MSG comes in the form of Addr=0x80000008 RSPCode=0x80 Token=??xxxx Unk1=0x00000000
	
	General status transmition from card every second from 0x80000088 0x00 0x000000 0x00000000
		Probably something to do with traffic and link status for real time graph
	
	***Does each Addr=0x800000?? have a deterministic response and send size? If so we need to figure them all out.
		High priority***
	
	Is it possible Addr has to do with metadata???:
		NCP_INTERFACE_PCI_DEVADDR=0x00001c00
		NCP_INTERFACE_PCI_BAR0=0xc0000000
		NCP_INTERFACE_REGION0=0x80000000 <<<<<<<<<
	Or is it that 0x80 in addr is some code like with the RSPCode/Token 4 byte split???
	What is Unk1???